<% #if current_user %>

<div class="container mf_container">

  <div class="row">
    <div class="col-md-6 col-sm-6 col-xs-12">
      <ul class="nav nav-pills mf-steps">
        <li class="active"><a href="#" id="show_photos">1. Photos</a></li>
        <li><a href="#" id="show_music">2. Music</a></li>
        <li id="publish" class="disabled"><a href="#" id="publish_btn">3. Review</a></li>
      </ul>
    </div>
    <div class="col-md-6 col-sm-6 col-xs-12">
      <div class="stats">
        <div class="stats-item pull-right"><i class="fa fa-video-camera"></i> Runtime: <div class="stats-item-detail" id="runtime">0 secs</div></div>
        <div class="stats-item pull-right"><i class="fa fa-headphones"></i> Music: <div class="stats-item-detail" id="music_selected">None</div></div>
        <div class="stats-item pull-right"><i class="fa fa-camera-retro"></i> Photos: <div class="stats-item-detail" id="no_of_photos">None</div></div>
      </div>
    </div>
  </div>

  <!-- container for photograph section -->
  <div id="photographs">

    <ul class="nav nav-tabs nav-justified photo_sources">
      <li class="active" id="facebook_photos"><a href="#"> Facebook photos</a></li>
      <li id="instagram_photos"><a href="#"><i class="fa fa-instagram"></i> Instagram Photos</a></li>
      <li id="flickr_photos"><a href="#"><i class="fa fa-flickr"></i> Flickr Photos</a></li>
    </ul>

    <div id="instagram_container">
      <div class="instagram_albums_breadcrumbs">
        <ol class="breadcrumb instagram_albums_breadcrumb">
          <% if current_user.instagram_token == nil %>
            <a href="/users/auth/instagram" class="btn btn-block btn-social btn-instagram" style="display: inline-block;"><i class="fa fa-instagram"></i>Get my Instagram</a>
          <% else %>
            <a href="#" class="btn btn-default btn-primary" id="my_instagram"><span class="glyphicon glyphicon-arrow-left"></span> My instagram</a>
          <% end %>
            <div class="input-group input-group-lg col-lg-6 col-sm-6 col-xs-12 pull-right">
              <input type="text" class="form-control instagram_search" placeholder="Search instagram">
            </div>
        </ol>
        </div>
      <div class="row instagram_contents"></div>
      <div class="row instagram_search_contents"></div>
    </div>

    <div id="FB_albums_container">
      <div class="search_albums_breadcrumbs">
        <ol class="breadcrumb albums_breadcrumb">
          <% if current_user.facebook_token == nil %>
            <a href="" class="btn btn-block btn-social btn-facebook" style="display: inline-block;"><i class="fa fa-facebook"></i>Get Facebook photos</a>
          <% else %>
            <a href="#" class="btn btn-default btn-primary" id="my_album"><span class="glyphicon glyphicon-arrow-left"></span> Back to My Albums</a> 
          <% end %>
          <a href="#" class="btn btn-default btn-primary" id="my_album"><span class="glyphicon glyphicon-arrow-left"></span> Back to My Albums</a>
          <div class="input-group input-group-lg col-lg-6 col-sm-6 col-xs-12 pull-right">
            <input type="text" class="form-control fb_friends" placeholder="Find friends albums">
          </div>
        </ol>
      </div>
      <div class="loading_stuff">
        <div class="spinner">
          <div class="double-bounce1"></div>
          <div class="double-bounce2"></div>
        </div>
        <div id="albums_loading">Loading facebook albums...</div>
      </div>
      
      <div class="row fb_album_contents"></div> <!-- For displaying the photos within a particular album -->
      <div class="row fb_friends_albums"></div> <!-- For displaying a friends albums -->
      <div class="row fb_albums_row"> <!-- For displaying the users own albums -->
        <div class="container"><h3 id="my_albums_header">My Albums</h3></div>
      </div>
    </div> <!-- End of FB albums container -->
  </div> <!-- End of photographs container -->

  <div id="music_container">
    <div class="music_search_albums_breadcrumbs">
        <ol class="breadcrumb music_albums_breadcrumb">
          <div class="input-group input-group-lg col-lg-6 col-sm-6 col-xs-12 pull-right">
            <input type="text" class="form-control search_youtube" placeholder="Search for an artist or song">
          </div>
        </ol>
    </div>
    <div class="youtube_loading">
      <div class="spinner">
        <!-- TODO Need to change the fb logo to yt here -->
        <div class="double-bounce1"></div>
        <div class="double-bounce2"></div>
      </div>
      <div id="youtube_loading_text">Loading YouTube...</div>
    </div>
    <div class="row music_vids_row"> <!-- For displaying the videos -->
      <div class="container"><h3 id="music_videos_header">Popular Songs</h3></div>
      <div id="youtube_results"></div>
    </div>
  </div> <!-- End of music container -->

  <div id ="publish_container">
    <div id="publish_options">
      <input type="text" class="form-control moflix-title" placeholder="Give your moflix a name">
      <div class="row">
        <div class="col-lg-12 col-sm-12 col-xs-12">
          <button class="btn mf_btn btn-lg" id="done_button"><span class="glyphicon glyphicon-film"></span> make my <span class="moflix">moflix</span></button>
        </div>
      </div>
    </div>
    <div id="edit_options">
      <h3>Drag and drop to reorder your photos</h3>
      <ul id="sortable">
      </ul>
      <div class="clearfix"></div>
    </div> <!--/edit_options-->
  </div> <!-- End of publish container -->

<script>

$(function() {

  $('body').css("background", "none");
  $( "#sortable" ).sortable();
  $( "#sortable" ).disableSelection();
  // Hide the 'Back to My Albums' button as we start with a view of the user's albums
  $('.albums_breadcrumb').find('.btn').fadeOut(0);
  $('.albums_breadcrumb').find('.btn-facebook').fadeIn(0);
  $('#instagram_container').fadeOut(0);
  $('#my_instagram').fadeOut(0);
  $('.navbar-btn').fadeOut(0);
  $('#publish_container').fadeOut(0);

  $('.instagram_search').bind("enterKey",function(e){
    $('.instagram_search_contents').empty();
    searchInstagram($('.instagram_search').val());
    $('.instagram_contents').slideUp( "slow");
    $('#my_instagram').fadeIn(0);
    $('.instagram_search').val("");
    $('.instagram_search_contents').slideDown("slow");
  });

  $('.instagram_search').keyup(function(e){
    if(e.keyCode == 13)
    {
      $(this).trigger("enterKey");
    }
  });

  $('#my_instagram').click(function() {
    $('#my_instagram').fadeOut(0);
    $('.instagram_contents').slideDown( "slow");
    $('.instagram_search_contents').fadeOut(0);
    return false;
  })


  $('#instagram_photos').click(function() {
    $('#FB_albums_container').fadeOut(0);
    $('li#facebook_photos').removeClass( "active" );
    $('li#instagram_photos').addClass( "active" );
    $('#instagram_container').fadeIn(0);
    // Only if the current user has an Instagram login
    var userInstagramUid = userInstagramId();
    if (userInstagramUid != "") {
      // Make the Ajax call to instagram (if we haven't already done so)
      if ($('.instagram_contents').children().length == 0) {
        $('.instagram_contents').append("<div class='container'><h3>My instagram photos</h3></div>");
        getInstagramPhotos();
      };
    }

    return false;
  })

  $('#facebook_photos').click(function() {
    $('#instagram_container').fadeOut(0);
    $('li#instagram_photos').removeClass( "active" );
    $('li#facebook_photos').addClass( "active" );
    $('#FB_albums_container').fadeIn(0);
    return false;
  })

  function searchInstagram(searchTerm){
    var url = "https://api.instagram.com/v1/tags/" + searchTerm.replace(/ /g,'') + "/media/recent?client_id=6bb0888d23d145058cb6ab49c268ec3b";
    instagramPhotos = $.ajax({
          type: "GET",
          url: url,
          dataType: "jsonp",
          crossDomain: true,
          success: function(data){
            $('.instagram_search_contents').append("<div class='container'><h3>Instagram results for \"" + searchTerm + "\"</h3></div>");
            displayInstagramPhotos(data, "search");
          }
      });
  }

  function isUserOnFacebook() {
    userFacebookToken = "<%= current_user.facebook_token %>";
    if (userFacebookToken == "") {
      return false;
    } else {
      return true;
    }
  }

  function userInstagramId() {
    var userProvider = "<%= current_user.provider %>";
    if (userProvider == "instagram") {
      userInstagramUid = "<%= current_user.uid %>";
    } else {
      userInstagramUid = "<%= current_user.instagram_uid %>";
    }
    return userInstagramUid;
  }

  function getInstagramPhotos(url, source) {
    userInstagramUid = userInstagramId();
    userInstagramAccessToken = "<%= current_user.instagram_token %>"
    if ((url == undefined) && (source == undefined)) {
      var url = "https://api.instagram.com/v1/users/"+ userInstagramUid +"/media/recent?access_token="+userInstagramAccessToken;
    };

    instagramPhotos = $.ajax({
          type: "GET",
          url: url,
          dataType: "jsonp",
          crossDomain: true,
          success: function(data){
            if (source == "search") {
              displayInstagramPhotos(data, "search");
            }
            else {
              displayInstagramPhotos(data);
            }
            
          }
      });
  } // End of getInstagramPhotos function

  function displayInstagramPhotos(data, source){
  // Add each photo in the Ajax response to the moflix.photos array
  if (source == "search") {
    $('.instagram_search_contents').find('.instagram_show_more').remove();
    thediv = $('.instagram_search_contents');
  }
  else {
    $('.instagram_contents').find('.instagram_show_more').remove();
    thediv = $('.instagram_contents');
  }
    for (var i=0;i<data["data"].length;i++)
      {
        var photo = new Object;
        photo.cameFromSite = "Instagram";
        photo.id = data["data"][i]['id'];
        photo.name = data["data"][i]['caption'];
        photo.height = data["data"][i]['images']['standard_resolution']['height'];
        photo.width = data["data"][i]['images']['standard_resolution']['width'];
        photo.source = data["data"][i]['images']['standard_resolution']['url'];
        photo.created = data["data"][i]['created_time'];
        photo.from = data["data"][i]['user']['full_name'];
        photo.fromid = data["data"][i]['user']['id'];
        photo.comments = data["data"][i]['comments'];
        photo.likes = data["data"][i]['likes'];
        photo.frompic = data["data"][i]['user']['profile_picture'];

        photosForDisplay.push(photo);

        thediv.append(
          "<div class='col-lg-2 col-sm-3 col-xs-6'>" +
          "<div class='thumbnail img-responsive'>" +
          "<div class='mf_thumbnail' style='background-image: url(" + photo.source + ")'><div class='mf_thumb_buttons' id='" + photo.id + "'><br/><button class='btn add_instagram_photo'><span class='glyphicon glyphicon-plus'></span> Add photo</button></div></div></div></div>"
          );          
      }; // End for loop
      
      if (data['pagination']['next_url'] != undefined) {
        nextUrl = data['pagination']['next_url'];
        thediv.append(
          "<div class='col-lg-2 col-sm-3 col-xs-6 instagram_show_more'>" +
          "<div class='thumbnail img-responsive '>" +
          "<div class='mf_thumbnail'><a href='#'' class='btn btn-default btn-info btn-lg instagram_get_more' data-url=" + nextUrl +"><span class='glyphicon glyphicon-circle-arrow-right'></span> Show more</a></div></div></div>"
          ); 
      }
      thumbnailHeight();
        $('.instagram_get_more').click(function(ev) {
          if (source == "search") {
            getInstagramPhotos($(this).attr('data-url'), "search");
          }
          else {
            getInstagramPhotos($(this).attr('data-url'));
          }
          ev.preventDefault;
          return false;
        });

  } // End of addInstagramPhotos function

  $(document).on('click', '.add_instagram_photo', function(){ 
    var photoObject = $(this).parent().attr("id").toString()
    var result = $.grep(photosForDisplay, function(e){ return e.id === photoObject });
    $('#thumbscontainer').find('p').remove();
    $('.imagelist').append(
      "<li class='thumbimage'><img id='tnimage1' src='"
      + result[0]['source']
      +"'></li>"
    );
    $('#publish').removeClass("disabled");
    addAlbumPhotos(result[0]);
    // TODO This is a CSS hack that I am puttin in because I don't have time to find out what is going wrong properly - need to come back and sort this out later.
    $(this).css("color", "white");
  });

  
  $(document).on('click', '.trash_it', function(){ 
    var id = $(this).parent().attr("id").toString();
    // Need to remove the photo from the li on the sortable page
    var liToRemove = $('#sortable').find("#" + id);
    liToRemove.remove();

    var objectToRemove = $.grep(moflix.photos, function(e){ return e.id == id; });
    var indexToRemove = $.inArray(objectToRemove[0], moflix.photos);
    moflix.photos.splice(indexToRemove,1);

    // Need to remove the photo from the thumbnails bar at the bottom of the page - could just rebuild the thumbnail list?

    // Need to update photos added and runtime
    updateStatsPhotos();
    updateStatsRuntime();

  });


  // This function controls the moflix timeline and changes the scroll direction
  $('#thumbscontainer').bind('mousewheel', function(e) { // on scroll
    var $div = $('#thumbscontainer');
    // set div scroll top offset to current + extra from this scroll
    $div.scrollLeft($div.scrollLeft() - e.originalEvent.wheelDelta);
    return false; // prevent body scrolling
  })

  moflix = new Object();
  moflix.photos = [];
  photosForDisplay = [];
  
  if(isUserOnFacebook()){
    // Typeahead.js stuff
    var fb_friends = new Bloodhound({
      datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
      queryTokenizer: Bloodhound.tokenizers.whitespace,
      limit: 10,
      prefetch: {
        // url points to a json file that contains an array of country names, see
        // https://github.com/twitter/typeahead.js/blob/gh-pages/data/fb_friends.json
        url: '/fb_friends'
        // filter: function (parsedResponse) {
        //         // parsedResponse is the array returned from your backend
        //         // do whatever processing you need here
        //         //return parsedResponse;
        //     }
        // the json file contains an array of strings, but the Bloodhound
        // suggestion engine expects JavaScript objects so this converts all of
        // those strings
        // filter: function(list) {
        //   return $.map(list, function(country) { return { name: country }; });
        // }
      }
    });
     
    //clear the cache
    fb_friends.clearPrefetchCache();
    // kicks off the loading/processing of `local` and `prefetch`
    fb_friends.initialize();
     
    // passing in `null` for the `options` arguments will result in the default
    // options being used
    $('.input-group .fb_friends')
      .typeahead(null, {
        name: 'fb_friends',
        displayKey: 'name',
        // `ttAdapter` wraps the suggestion engine in an adapter that
        // is compatible with the typeahead jQuery plugin
        source: fb_friends.ttAdapter()
      })
      .on('typeahead:selected', onAutocompleted)
      .on('typeahead:autocompleted', onSelected);
     
    function onAutocompleted($e, datum) {
        getFriendsPhotoAlbums(datum);
    }
     
    function onSelected($e, datum) {
        getFriendsPhotoAlbums(datum);
    }
    // end of typeahead stuff
  } // end of if isUserOnFacebook

  // Event listener for the select song button

  $(document).on('click', '.choose_song', function(){ 
    alert("Ok, the song has been added to your Moflix");
    moflix.musictrack = $(this).attr('id');
    updateStatsMusic();
  })

  // $(document).on('touchstart', '.mf_thumbnail', function(ev){ 
  //   // Need an if statement to only run this code if the buttons aren't already displaying
  //   // Remove the previous selection buttons and show this one
  //   $('.mf_thumb_buttons').hide()
  //   var id = ev.target.children[0].id;
  //   $('#' + id).show();
  // })

  $('.search_youtube').bind("enterKey",function(e){
    var searchTerm = $('.search_youtube').val();
    searchYoutube(searchTerm);
  });

  $('.search_youtube').keyup(function(e){
    if(e.keyCode == 13)
    {
      $(this).trigger("enterKey");
    }
  });

  // Function to get the album cover pic from FB as the cover url is not provided with album data
  function getPhotoById(id) {
    coverPhoto = $.ajax({
          type: "GET",
          url: "/get_picture?pictureid=" + id,
          dataType: "json",
          success: function(data){
          }
      });
  } // End of getPhotoById function

  // Ensure the empty divs contain the image backgrounds are responsive
  $( window ).resize(function() {
    thumbnailHeight();
  });

  // Get the user's FB albums and build the view of them
  if(isUserOnFacebook()) {
    $.ajax({
        type: "GET",
        url: "/user_albums",
        dataType: "json",
        success: function(data){
            $( ".loading_stuff" ).fadeOut(0);
            for (var i=0;i<data.length;i++)
              { 
                var pictureURL = $.ajax({
                  type: "GET",
                  async: false,
                  url: "/get_picture?pictureid=" + data[i]['cover'],
                  dataType: "json"
                });
                data[i]['cover'] = pictureURL.responseText;
                // build album add and browse buttons
                $('.fb_albums_row').append(
                  "<div class='col-lg-2 col-sm-3 col-xs-6'>" +
                  "<p>" + data[i]['name'] + " (" + data[i]['count'] + ")</p>" +
                  "<div class='thumbnail img-responsive'>" +
                  "<div class='mf_thumbnail' style='background-image: url(" + data[i]['cover'] + ")'><div class='mf_thumb_buttons' id='" + data[i]['id'] +"' data-name='"+ data[i]['name'] +"'><button class='btn btn-default btn-primary browse'><span class='glyphicon glyphicon-search'></span> Browse</button><br/><button class='btn btn-default btn-success add_all'><span class='glyphicon glyphicon-plus'></span> Add all</button></div></div></div></div>"
                  // TODO Sometimes, FB returns an album with no cover photo - if this is the case, then we need to substitute the last (or first?) photo in the album to prevent the error being displayed.
                  );          
              }; // End of for loop
              thumbnailHeight();
              // Set up the click handler for the buttons (have to do this here to ensure it is done AFTER the creation of the divs!)
              $( ".add_all" ).click(function() {
                getAlbumPhotos($(this).parent().attr("id"));
              });  

              $( ".browse" ).click(function() {
                $('.loading_stuff').fadeIn(0);
                displayPhotos($(this).parent().attr("id"), $(this).parent().attr("data-name"));
                
              });
      } // Close success callback
    }); // Close Ajax call
  } else {
    $('.loading_stuff').hide();
    $('.fb_friends').hide();
    $('#my_albums_header').hide();
  } // End If user is on Facebook

  $( '#show_music' ).click(function() {
    // If there are no music video results already, go and and get popular music videos from YouTube when the user clicks on the music pill.
    if ($('#youtube_results').is(':empty')) {
      getYouTubeTop40();
    }
    $('.navbar-fixed-bottom').animate({bottom:'-150px'}, {queue: false, duration: 1500});
    $('#publish_btn').parent().removeClass( "active" );
    $('#show_photos').parent().removeClass( "active" );
    $('#show_music').parent().addClass( "active" );
    $('#photographs').slideUp( "slow");
    $('#publish_container').fadeOut(0);
    $('#music_container').slideDown( "slow");
    return false;
  })

  $( '#show_photos' ).click(function() {
    sortOrder();
    $('#publish_btn').parent().removeClass( "active" );
    $('#show_music').parent().removeClass( "active" );
    $('#show_photos').parent().addClass( "active" );
    $('#photographs').slideDown( "slow");
    $('#music_container').slideUp( "slow");
    $('#publish_container').fadeOut(0);
    // Need to rebuild the thumbnails bar
    $('.thumbimage').remove();
    // Loop through moflix.photos and for each item, add a pic
    for (var i=0;i<moflix.photos.length;i++) {
      $('.imagelist').append(
                "<li class='thumbimage'><img id='tnimage1' src='"
                + moflix.photos[i].source
                +"'></li>"
              );
    };
    $('.navbar-fixed-bottom').animate({bottom:'0px'}, {queue: false, duration: 1500});
    return false;
  })

  $('#publish_btn').click(function() {
    if($('#publish').attr('class') != "disabled") {
      $('#show_music').parent().removeClass( "active" );
      $('#show_photos').parent().removeClass( "active" );
      $('#publish_btn').parent().addClass( "active" );
      $('#music_container').slideUp( "slow");
      $('#photographs').slideUp( "slow");
      $('#publish_container').slideDown( "slow" );
      $('.navbar-fixed-bottom').animate({bottom:'-150px'}, {queue: false, duration: 1500});
      displayEditThumbs();
    }
    return false;
  })

  function displayEditThumbs() {
    if (moflix.photos.length > 0) {
      $('#sortable').empty();
      // Append each item to the sortable ul
      for (var i=0;i<moflix.photos.length;i++) {
        $('#sortable').append("<li class='ui-state-default' id='" + moflix.photos[i]['id'] + "'><img src='" + moflix.photos[i]['source'] + "' class='cropped'/><div class='trash_it'><i class='fa fa-trash-o'></i></div></li>");
      }
    }
  }

  }); // End of page load function

  function sortOrder() {
    // Build a list of photos as they appear in the sorted list
    var items = $('#sortable').find('li').map(function() {
    var item = { };
    item.id = this.id;
    return item;
    });
    tempPhotos = moflix.photos;
    moflix.photos = [];
    // Need to loop through the sorteditems
    for (var i=0;i<items.length;i++) {
      var id = items[i]['id'];
      var photo = findPhoto(items[i]['id']);
      moflix.photos.push(photo[0]);
    };
  }

  function findPhoto(id){
      return $.grep(tempPhotos, function(item){
      return item.id == id;
    });
  };

  function getYouTubeTop40() {
    $.ajax({
      type: "GET",

      url: "https://www.googleapis.com/youtube/v3/playlistItems?part=contentDetails"
                    + "&playlistId=PL7C00E83736FB02C3"
                    + "&maxResults=20"
                    + "&videoEmbeddable=true"
                    + "&key=AIzaSyBJaay41IqyhSQ7aUe2Xv5YrjuPibbLXVk",
      dataType: "json",
      success: function(data){
        displayYoutubeResults(data);
      } //End success callback
    }); // End Ajax request
  } // End getYouTubeTop40

  function displayYoutubeResults(data, search) {
    $('#youtube_results').fadeOut(0);
    $('.youtube_loading').fadeIn(0);
    $('#youtube_results').empty();
    for (var i=0;i<data.items.length;i++)
        {
          if (!search) 
          {
            var videoId = data.items[i].contentDetails.videoId;
          } else {
            var videoId = data.items[i].id['videoId'];
          }
          $('#youtube_results').append(
          "<div class='col-lg-3 col-sm-6 col-xs-12 music_vid'><iframe width='250' height='200' src='//www.youtube.com/embed/" + videoId +
          "?modestbranding=1&controls=0&frameborder='0'></iframe><br/><button class='btn btn-default btn-success btn-sm choose_song' id=" + videoId +
          "><span class='glyphicon glyphicon-headphones'></span> Select this song</button></div>"
          );
          // TODO more button to show paginated response
        };
    $('.youtube_loading').fadeOut(0);
    $('#youtube_results').fadeIn(0);
  }

  function searchYoutube(searchTerm) {
    searchTerm = searchTerm.replace(/ /g,"+");
    $('#music_videos_header').empty();
    $('.search_youtube').val("");
    // Want to show the youtube loading here
    $('#music_videos_header').append("Search results for " + searchTerm);
    // TODO Need to ensure Search Term is formatted with a '+' instead of spaces.

    $.ajax({
      type: "GET",
      url: "https://www.googleapis.com/youtube/v3/search?part=snippet"
                     + "&q=" + searchTerm
                     + "&type=video"
                     + "&maxResults=20"
                     + "&videoEmbeddable=true"
                     + "&order=viewCount"
                     + "&key=AIzaSyBJaay41IqyhSQ7aUe2Xv5YrjuPibbLXVk",
      dataType: "json",
      success: function(data){
        displayYoutubeResults(data, searchTerm);
      } //End success callback
    }); // End Ajax request
  } // End searchYoutube function

  function getFriendsPhotoAlbums(datum) {
    $('.albums_breadcrumb').find('.btn').fadeIn(0);
    $( "#my_album" ).click(function() {
      $('.fb_friends_albums').fadeOut(0);
      $('.fb_album_contents').fadeOut(0);
      $('.fb_albums_row').fadeIn(0);
    });
    $('.fb_friends_albums').empty();
    $('.fb_friends_albums').fadeOut(0);
    $('.fb_album_contents').empty();
    $('.fb_albums_row').fadeOut(0);
    $( '.loading_stuff' ).fadeIn(0);
    var name = datum["name"].split(" ")[0];
    $('.fb_friends_albums').append(
      '<div class="container"><h3 id="albumOwner">' + name + '\'s Albums</h3></div>'
      );
    // make an Ajax call to get the albums
    $.ajax({
        type: "GET",
        url: "/fb_friends_albums/?userid=" + datum["id"],
        dataType: "json",
        success: function(data){
          for (var i=0;i<data.length;i++)
              { 
                // We have to make another call now to get the link the cover photo
                var pictureURL = $.ajax({
                  type: "GET",
                  async: false,
                  url: "/get_picture?pictureid=" + data[i]['cover'],
                  dataType: "json"
                });
                data[i]['cover'] = pictureURL.responseText;
                // build album add and browse buttons
                $('.fb_friends_albums').append(
                  "<div class='col-lg-2 col-sm-3 col-xs-6'>" +
                  "<div class='album_title'><p>" + data[i]['name'] + " (" + data[i]['count'] + ")</p></div>" +
                  "<div class='thumbnail img-responsive'>" +
                  "<div class='mf_thumbnail' style='background-image: url(" + data[i]['cover'] + ")'><div class='mf_thumb_buttons' id='" + data[i]['id'] +"' data-name='"+ data[i]['name'] +"'><button class='browse btn btn-default btn-primary'><span class='glyphicon glyphicon-search'></span> Browse</button><br/><button class='btn btn-default btn-success add_all'><span class='glyphicon glyphicon-plus'></span> Add all</button></div></div></div></div>"
                  // <a href='#' class='btn btn-default btn-info btn-lg'><span class='glyphicon glyphicon-search'></span> Choose pictures</a>
                  );          
              }; // End of for loop
              $( '.loading_stuff' ).fadeOut(0);
              $('.fb_friends_albums').fadeIn(0);
              thumbnailHeight();
              $( ".add_all" ).click(function() {
                getAlbumPhotos($(this).parent().attr("id"));
              });  

              $( ".browse" ).click(function() {
                displayPhotos($(this).parent().attr("id"), $(this).parent().attr("data-name"));
              });
              
        } //End of success callback
    });
  } // End of getFriendsPhotoAlbums

  function getAlbumPhotos(albumId) {
    $.ajax({
      type: "GET",
      url: "/photos_by_album?albumid=" + albumId,
      dataType: "json",
      success: function(data){
        // Add each photo in the Ajax response to the moflix.photos array
        for (var i=0;i<data.length;i++)
          {
            var photo = new Object;
            photo.cameFromSite = "Facebook";
            photo.id = data[i]['id'];
            photo.name = data[i]['name'];
            photo.height = data[i]['height'];
            photo.width = data[i]['width'];
            photo.source = data[i]['source'];
            photo.created = data[i]['created_time'];
            photo.from = data[i]['from']['name'];
            photo.fromid = data[i]['from']['id'];
            photo.comments = data[i]['comments'];
            photo.likes = data[i]['likes'];
            $('#thumbscontainer').find('p').remove();
            $('.imagelist').append(
              "<li class='thumbimage'><img id='tnimage1' src='"
              + photo.source
              +"'></li>"
            );
            addAlbumPhotos(photo);
          }; // End for loop
          $('#publish').removeClass("disabled");
          updateStatsPhotos();

      } //End success callback
    }); // End Ajax request
  } // End of getAlbumPhotos function

  // Once we have the photos from the album, let's display them.
  function displayPhotos(albumId, albumName) {
    $('.albums_breadcrumb').find('.btn').fadeIn(0);
    
    $( '#my_album' ).click(function(event) {
      event.preventDefault();
      $('.albums_breadcrumb').find('.btn').fadeOut(0);
      $('.fb_friends_albums').fadeOut(0);
      $('.fb_album_contents').fadeOut(0);
      $('.fb_albums_row').fadeIn(0);
    });
    headingTitle = "Albums";
    if ($('#my_albums_header').is(":visible")){
      headingTitle = "My Albums"
    };
    if ($('#albumOwner').is(":visible")){
      headingTitle = $('#albumOwner').html();
    };
    $('.loading_stuff').fadeIn(0);
    // photosForDisplay = [];
    //$('.fb_album_contents').fadeOut(0);
    $('.fb_album_contents').empty();
    $('.fb_album_contents').append(
      '<div class="container"><h3><a href="#" id="hide_gallery">' + headingTitle + '</a> / ' + albumName + '</h3></div>'
      );
    $( "#hide_gallery" ).click(function() {
          $('.fb_album_contents').fadeOut(0);
        });

    // Ajax call to get the photos
    $.ajax({
      type: "GET",
      url: "/photos_by_album?albumid=" + albumId,
      dataType: "json",
      async: false,
      success: function(data){
        // Add each photo in the Ajax response to the moflix.photos array
        for (var i=0;i<data.length;i++)
          {
            var photo = new Object;
            photo.cameFromSite = "Facebook";
            photo.id = data[i]['id'];
            photo.name = data[i]['name'];
            photo.height = data[i]['height'];
            photo.width = data[i]['width'];
            photo.source = data[i]['source'];
            photo.created = data[i]['created_time'];
            photo.from = data[i]['from']['name'];
            photo.fromid = data[i]['from']['id'];
            photo.comments = data[i]['comments'];
            photo.likes = data[i]['likes'];
            photosForDisplay.push(photo);

            $('.fb_album_contents').append(
              "<div class='col-lg-2 col-sm-3 col-xs-6'>" +
              "<div class='thumbnail img-responsive'>" +
              "<div class='mf_thumbnail' style='background-image: url(" + data[i]['source'] + ")'><div class='mf_thumb_buttons' id='" + data[i]['id'] + "'><br/><button class='btn btn-default btn-success add_photo'><span class='glyphicon glyphicon-plus'></span> Add photo</button></div></div></div></div>"
              );          
          }; // End for loop
          $('.loading_stuff').fadeOut(0);
          $('.fb_album_contents').fadeIn(0);
          thumbnailHeight();
          $('.add_photo').click(function() {
            var photoObject = $(this).parent().attr("id").toString()
            var result = $.grep(photosForDisplay, function(e){ return e.id === photoObject });
            $('#thumbscontainer').find('p').remove();
            $('.imagelist').append(
              "<li class='thumbimage'><img id='tnimage1' src='"
              + result[0]['source']
              +"'></li>"
            );
            $('#publish').removeClass("disabled");
            addAlbumPhotos(result[0]);
            updateStatsPhotos();
          });
      } //End success callback

    }); // End Ajax request
  } // End of displayPhotos function

  function updateStatsPhotos() {
    var numberOfPhotos = moflix.photos.length;
    $('#no_of_photos').html(numberOfPhotos);
  }

  function updateStatsMusic() {
    $('#music_selected').html("<i class='fa fa-check'></i>");
  }

  function updateStatsRuntime() {
    var runTime = 0
    for (var i=0;i<moflix.photos.length;i++) {
      if (moflix.photos[i].comments == undefined) {
        runTime += 6;
      } else {
        runTime += 6;
        runTime += moflix.photos[i].comments['data'].length;
      }
    }
    if (runTime > 59) {
      var minutes = Math.round(runTime / 60);
      var seconds = runTime % 60;
    }
    else {
      var minutes = 0;
      var seconds = runTime;
    }
    $('#runtime').html(minutes + "m " + seconds + "s");
  }

  function addAlbumPhotos(photo) {
    imageListWidth();
    scrollToEnd();
    moflix.photos.push(photo);
    updateStatsRuntime();
  }

// Creating the event and posting to rails
  $( "#done_button" ).click(function() {
    sortOrder();
    moflix.username = "<%= current_user.name %>";
    moflix.userid = "<%= current_user.id %>";
    if ($('#moflix-title').val() == "")
    {
      moflix.title = "A moflix by "+ moflix.username;
    } else {
      moflix.title = $('#moflix-title').val();
    }

    $.ajax({
      type: "POST",
      url: "/events",
      beforeSend: function(xhr) {
      xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
      },
      dataType: "json",
      data: {
             "event":moflix
             },
      success: function(data){
        alert("Moflix created")
      }
    }); // end of AJAX request
  }) //End click function

</script>

<!-- Sticky footer for thumbnails -->

<div id="force-mobile-footer"> </>

<footer class="navbar navbar-fixed-bottom transparent navbar-inverse">

  <a href="#" class="pull-right edit-moflix">Edit your moflix</a>
  <div class="container">
    <div id="thumbscontainer">
      <p>Choose photos to add to your Moflix</p><p>and they'll appear here.</p>
    <ul class="imagelist">
    </div>
  </div>
</footer>

<script>

// The div contained within the Thumbnails is empty. Here we force the height of it to show the background image
function thumbnailHeight() {
  div = $('.mf_thumbnail');
  divWidth = div.width();
  div.css('height', divWidth);
};

// A function to calculate the width of .imagelist
function imageListWidth() {
  var lengthRequired =  (($(".thumbimage").length)*(100+4))+104;  
  $(".imagelist").css("width", lengthRequired)
};

function scrollToEnd() {
  $('#thumbscontainer').scrollLeft($('.imagelist').outerWidth());
};

</script>

  <% #else %>
    <% #redirect_to login_path %>
  <% #end %>

